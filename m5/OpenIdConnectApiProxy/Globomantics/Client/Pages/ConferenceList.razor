@page "/"
@using Globomantics.Client.ApiServices;
@using Globomantics.Client.Components
@using Globomantics.Client.Models;
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@inject IConferenceApiService apiService
@inject AuthenticationStateProvider authProvider

<AuthorizeView>
    <div class="row">
        <div class="col-md-10 col-md-offset-2">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Location</th>
                        <th>Start of event</th>
                        <th>Attendees</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var conference in conferences)
                    {
                        <ConferenceListItem conference="@conference"></ConferenceListItem>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-md-offset-2">
            <a href="/addconference">Add</a>
        </div>
            <table class="table table-sm">
                @foreach (var claim in claims)
                {
                    <tr>
                        <td>@claim.Type</td>
                        <td>@claim.Value</td>
                    </tr>
                }
            </table>
    </div>
</AuthorizeView>


@code {
    IEnumerable<ConferenceModel> conferences = new List<ConferenceModel>();
    IEnumerable<Claim> claims = new List<Claim>();

    protected override async Task OnInitializedAsync()
    {      
        var state = await authProvider.GetAuthenticationStateAsync();
        if (state.User.Identity.IsAuthenticated)
        {
            claims = state.User.Claims;
            conferences = await apiService.GetAll();
        }
    }
}